% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/coreOTUModule.R
\name{coreOTUModule}
\alias{coreOTUModule}
\title{Server function for Core OTU Module}
\usage{
coreOTUModule(input, output, session, pstat)
}
\arguments{
\item{input}{Shiny server input object created by \code{callModule}}

\item{output}{Shiny server output object created by \code{callModule}}

\item{session}{Session created by \code{callModule}}

\item{pstat}{PathoStat object (third argument to \code{callModule}).}
}
\value{
None
}
\description{
This function provides the server logic for the Core OTU tab. This function 
is not called directly; instead, it should be invoked within the Shiny app's 
server function using the \code{\link[shiny]{callModule}} function.
See \url{ http://shiny.rstudio.com/articles/modules.html} for information
about this design pattern.
}
\details{
The \code{\link[shiny]{callModule}} function should be invoked with this
function as the first argument. \code{callModule} is responsible for creating
the namespaced \code{input}, \code{output}, and \code{session} arguments.
The second argument to \code{callModule} is the ID to be used for the 
namespace and \emph{must} match the \code{id} argument provided to 
\link{coreOTUModuleUI}. The third argument to \code{callModule} should
be a \linkS4class{PathoStat} object from the app's server function, and is
passed to this function as the \code{pstat} argument.
}
\examples{
# This function is not called directly; instead, it should be invoked within
# the app's server function using the shiny::callModule function.
\dontrun{
shinyServer(function(input, output, session) {
    shinyInput <- getShinyInput()
    pstat <- shinyInput$pstat
    callModule( coreOTUModule, "coreOTUModule", pstat )
}
}

}
\seealso{
\code{\link{coreOTUModuleUI}} for the UI function, 
    \code{\link[shiny]{callModule}} to see how to invoke this function, or
    \url{ http://shiny.rstudio.com/articles/modules.html} for more 
    information about Shiny modules.
}

